# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  locale: 'en'
  rabbit.host: '%env(RABBITMQ_HOST)%'
  rabbit.port: '%env(RABBITMQ_PORT)%'
  rabbit.login: '%env(RABBITMQ_USER_NAME)%'
  rabbit.password: '%env(RABBITMQ_PASSWORD)%'


services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: ['controller.service_arguments']

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
  admin.user:
    class: App\Admin\BaseAdmin
    arguments: [~, App\Entity\User, ~]
    tags:
      - { name: sonata.admin, manager_type: orm, label: User }

  get_set_method_normalizer:
    class: Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer
    public: false
    tags: [serializer.normalizer]

  user.registration_listener:
    class: App\EventListener\RegistrationListener
    arguments: []
    tags:
      - { name: kernel.event_subscriber }
