version: "3.1"
services:

  mysql:
    image: mysql:8.0
    container_name: symfony4-mysql
    working_dir: /application
    volumes:
      - .:/application
      - ./db/data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=123
      - MYSQL_DATABASE=symfony
      - MYSQL_USER=user
      - MYSQL_PASSWORD=123
    ports:
      - "8003:3306"
    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci','--default-authentication-plugin=mysql_native_password']
    networks:
      - mynet

  mysql-master:
    image: bitnami/mysql:latest
    ports:
      - '9000:3306'
    volumes:
      - mysql_master_data:/bitnami
      - ./MySql/data/mysql-master:/bitnami/mysql/data
    environment:
      - MYSQL_REPLICATION_MODE=master
      - MYSQL_REPLICATION_USER=repl_user
      #      - MYSQL_REPLICATION_PASSWORD=repl_password
      - MYSQL_USER=my_user
      - MYSQL_PASSWORD=123
      - MYSQL_DATABASE=my_database
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - mynet

  mysql-slave:
    image: bitnami/mysql:latest
    ports:
      - '3306'
    depends_on:
      - mysql-master
    environment:
      #      - MYSQL_ROOT_PASSWORD=123
      - MYSQL_REPLICATION_MODE=slave
      - MYSQL_REPLICATION_USER=repl_user
      #      - MYSQL_REPLICATION_PASSWORD=repl_password
      - MYSQL_USER=my_user
      - MYSQL_PASSWORD=123
      - MYSQL_DATABASE=my_database
      - MYSQL_MASTER_HOST=mysql-master
      - MYSQL_MASTER_PORT_NUMBER=3306
      #      - MYSQL_MASTER_ROOT_PASSWORD=123
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - mynet

  nginx:
    build:
      context: .
      dockerfile: BackServer/docker/nginx.docker
    container_name: webserver
    working_dir: /application
    volumes:
      - .:/application
      - ./BackServer/docker/nginx:/etc/nginx/conf.d
      - ./logs:/var/log/nginx
      - ./BackServer/docker/request:/nginx/request
    depends_on:
      - server1
      - server2
      - server3
    ports:
      - "80:80"
    networks:
      mynet:
        aliases:
          - back.test

  server1:
    build:
      context: ./FrontServer
      dockerfile: docker/php.docker
    container_name: symfony4-php-fpm
    working_dir: /application/FrontServer
    volumes:
      - .:/application
    #      - ./FrontServer/docker/php-fpm/php-ini-overrides.ini:/etc/php/7.2/fpm/conf.d/99-overrides.ini
    depends_on:
      - rabbitmq
      - mysql
    ports:
      - "8000:80"
    networks:
      - mynet

  server2:
    build:
      context: ./BackServer
      dockerfile: docker/php.docker
    container_name: yii-php-fpm
    working_dir: /application/BackServer
    volumes:
      - .:/application
      - ./BackServer/docker/php-fpm/php-ini-overrides.ini:/etc/php/7.2/fpm/conf.d/99-overrides.ini
    depends_on:
      - mysql-master
      - mysql-slave
      - rabbitmq
    ports:
      - "8004:80"
    networks:
      - mynet

  server3:
    build:
      context: ./LaravelServer
      dockerfile: docker/php.docker
    container_name: laravel-php-fpm
    working_dir: /application/LaravelServer
    volumes:
      - .:/application
    #      - ./FrontServer/docker/php-fpm/php-ini-overrides.ini:/etc/php/7.2/fpm/conf.d/99-overrides.ini
    depends_on:
      - mysql-master
      - mysql-slave
    ports:
      - "8005:80"
    networks:
      - mynet

  rabbitmq:
    image: rabbitmq:3.7.5-management
    # image: bitnami/rabbitmq:latest
    working_dir: /application/FrontServer
    # build:
    #     context: ./Symfony
    #     dockerfile: docker/rabbitMQ.docker
    hostname: rabbit-mq
    container_name: symfony4-rabbit-mq
    volumes:
      - .:/application
      - ./FrontServer/docker/enabled_plugins:/etc/rabbitmq/enabled_plugins
    ports:
      - '15672:15672'
      - '5672:5672'
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    networks:
      - mynet

volumes:
  mysql_master_data:
    driver: local

networks:
  mynet:
    driver: bridge
